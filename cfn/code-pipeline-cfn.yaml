AWSTemplateFormatVersion: '2010-09-09'
Description: Model and provision AWS CodePipeline and AWS CodeBuild

Parameters:

  EnvironmentType:
    Description: Environment Type
    Type: String
    Default: 'qa'
    AllowedValues:
      - dev
      - qa
      - prod

  ArtifactsBucket:
    Type: String
    Description: artifacts bucket
    Default: rax-ah-ssense-artifacts

  # *** The owner of the Github repo for this application.
  GitHubOwner:
    Type: String
    Default: jcourseault-tc
    AllowedPattern: "[A-Za-z0-9-]+"

  GitHubRepo:
    Type: String
    Default: jc-rax-test
    AllowedPattern: "[A-Za-z0-9-]+"

  GitHubBranch:
    Type: String
    Default: cicd-dev
    AllowedPattern: "[A-Za-z0-9-]+"



Resources:

  # Dev (QA) CodePipeline
  SsenseDevCodePipeline: 
    Type: AWS::CodePipeline::Pipeline
    Properties: 
      Name: !Sub ssense-glue-etl-qa-pipeline-${AWS::StackName}
      RoleArn: !GetAtt SsenseCodePipelineRole.Arn
      ArtifactStore: 
        Type: S3
        Location: !Ref ArtifactsBucket
      Stages: 
      - 
        Name: GitHubSource
        Actions: 
        - 
          Name: GitHubSourceAction
          ActionTypeId: 
            Category: Source
            Owner: ThirdParty
            Provider: GitHub
            Version: "1"
          OutputArtifacts: 
            - Name: SourceOutput
          Configuration: 
              Owner: !Ref GitHubOwner
              Repo: !Ref GitHubRepo
              Branch: !Ref GitHubBranch
              PollForSourceChanges: false 
              OAuthToken: '{{resolve:secretsmanager:joey-ssense:SecretString:token}}'
          Namespace: "SourceVariables"
          RunOrder: 1
      -
        Name: BuildGlueJobs
        Actions:
        -
          Name: BuildGlueJobsAction
          ActionTypeId:
            Category: Build
            Owner: AWS
            Provider: CodeBuild
            Version: "1"
          InputArtifacts:
            - Name: SourceOutput
          OutputArtifacts:
            - Name: BuildArtifacts
          Configuration:
            ProjectName: !Ref SsenseCodeBuild
            EnvironmentVariables: "[{\"name\":\"Execution_ID\",\"value\":\"#{codepipeline.PipelineExecutionId}\",\"type\":\"PLAINTEXT\"},{\"name\":\"Branch_Name\",\"value\":\"#{SourceVariables.BranchName}\",\"type\":\"PLAINTEXT\"},{\"name\":\"Commit_ID\",\"value\":\"#{SourceVariables.CommitId}\",\"type\":\"PLAINTEXT\"}]"
          RunOrder: 2

      -
        Name: QA_Deployment_Approval
        Actions:
        -
          Name: QA_Deployment_Approval
          InputArtifacts: []
          ActionTypeId:
             Category: Approval
             Owner: AWS
             Provider: Manual
             Version: "1"
          Configuration:
            CustomData: "Please approve the following change 
                         Commit message: #{SourceVariables.CommitMessage} 
                         Commit Id  :  #{SourceVariables.CommitId}"
          RunOrder: 3
        -
          Name: QA_Deployment
          InputArtifacts:
            - Name: BuildArtifacts
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Provider: "CloudFormation"
            Version: '1'
          Configuration:
            ActionMode: CREATE_UPDATE
            StackName: !Sub ssense-glue-etl-qc-stack
            ParameterOverrides: !Sub  '{"EnvironmentType": "qa", "ArtifactsBucket": "${ArtifactsBucket}" , "JobScriptKey" :"glue-scripts/etl-sample.py" }'
            TemplatePath:  BuildArtifacts::build-output/glue-cfn.yaml
            Capabilities: CAPABILITY_NAMED_IAM
            RoleArn: !GetAtt SsenseCloudFormationRole.Arn
          RunOrder: 4


  # CodeBuild
  SsenseCodeBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub BuildGlueJobsStack-${AWS::StackName}
      ServiceRole: !GetAtt SsenseCodeBuildRole.Arn
      Source:
        BuildSpec: glue-buildspec.yaml
        Type: CODEPIPELINE
      Artifacts:
        Type: CODEPIPELINE
      Environment: 
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        Type: LINUX_CONTAINER
        PrivilegedMode: True
        EnvironmentVariables:
          - Name: AWS_ACCOUNT_ID
            Value: !Ref AWS::AccountId
          - Name: ARTIFACTS_BUCKET
            Value: !Ref ArtifactsBucket
          - Name: ENV_TYPE
            Value: !Ref EnvironmentType
      LogsConfig: 
        CloudWatchLogs:
          Status: ENABLED


  # IAM Roles & Policies
  SsenseCodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub CodePipeline-Role-${AWS::StackName}
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          Effect: Allow
          Action: sts:AssumeRole
          Principal:
            Service: 
               - codepipeline.amazonaws.com
               - cloudformation.amazonaws.com
      Path: /
      Policies:
        - PolicyName: !Sub CodePipeline-Policy-${AWS::StackName}
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - codecommit:*
                  - codebuild:*
                  - codedeploy:*
                  - cloudformation:*
                  - cloudwatch:*
                  - s3:*
                  - sns:*
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'iam:PassRole'
                Resource: '*'
 
      

  SsenseCodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub CodeBuild-Role-${AWS::StackName}
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          Effect: Allow
          Action: sts:AssumeRole
          Principal:
            Service: codebuild.amazonaws.com
      Path: /
      Policies:
        - PolicyName: !Sub CodeBuild-Policy-${AWS::StackName}
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - cloudformation:*
                  - cloudwatch:*
                  - codebuild:*
                  - glue:*
                  - s3:*
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: '*'

  SsenseCloudFormationRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "cloudformation.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess


  DevPipelineWebhook:
    Type: 'AWS::CodePipeline::Webhook'
    Properties:
      Name: DevPipelineWebhook
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: "{{resolve:secretsmanager:joey-ssense:SecretString:token}}"
      Filters:
        - JsonPath: $.ref
          MatchEquals: 'refs/heads/{Branch}'
      TargetPipeline: !Ref SsenseDevCodePipeline
      TargetAction: GitHubSourceAction
      TargetPipelineVersion: !GetAtt SsenseDevCodePipeline.Version
      RegisterWithThirdParty: true



                

  